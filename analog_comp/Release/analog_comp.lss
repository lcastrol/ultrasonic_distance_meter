
analog_comp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000130  000001c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000130  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000001c4  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d8  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__vector_23>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 82 00 	call	0x104	; 0x104 <main>
  88:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init_comp>:
  90:	83 e0       	ldi	r24, 0x03	; 3
  92:	80 93 7f 00 	sts	0x007F, r24
  96:	8a e8       	ldi	r24, 0x8A	; 138
  98:	80 bf       	out	0x30, r24	; 48
  9a:	78 94       	sei
  9c:	08 95       	ret

0000009e <__vector_23>:
  9e:	1f 92       	push	r1
  a0:	0f 92       	push	r0
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	0f 92       	push	r0
  a6:	11 24       	eor	r1, r1
  a8:	8f 93       	push	r24
  aa:	80 b7       	in	r24, 0x30	; 48
  ac:	85 70       	andi	r24, 0x05	; 5
  ae:	31 f0       	breq	.+12     	; 0xbc <__vector_23+0x1e>
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	80 93 00 01 	sts	0x0100, r24
  b6:	80 b7       	in	r24, 0x30	; 48
  b8:	8e 7f       	andi	r24, 0xFE	; 254
  ba:	05 c0       	rjmp	.+10     	; 0xc6 <__vector_23+0x28>
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	80 93 00 01 	sts	0x0100, r24
  c2:	80 b7       	in	r24, 0x30	; 48
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	80 bf       	out	0x30, r24	; 48
  c8:	8f 91       	pop	r24
  ca:	0f 90       	pop	r0
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	0f 90       	pop	r0
  d0:	1f 90       	pop	r1
  d2:	18 95       	reti

000000d4 <uart_putchar>:
  d4:	90 91 c0 00 	lds	r25, 0x00C0
  d8:	95 ff       	sbrs	r25, 5
  da:	fc cf       	rjmp	.-8      	; 0xd4 <uart_putchar>
  dc:	80 93 c6 00 	sts	0x00C6, r24
  e0:	08 95       	ret

000000e2 <uart_init>:
  e2:	10 92 c5 00 	sts	0x00C5, r1
  e6:	80 e1       	ldi	r24, 0x10	; 16
  e8:	80 93 c4 00 	sts	0x00C4, r24
  ec:	e0 ec       	ldi	r30, 0xC0	; 192
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	82 60       	ori	r24, 0x02	; 2
  f4:	80 83       	st	Z, r24
  f6:	86 e0       	ldi	r24, 0x06	; 6
  f8:	80 93 c2 00 	sts	0x00C2, r24
  fc:	88 e0       	ldi	r24, 0x08	; 8
  fe:	80 93 c1 00 	sts	0x00C1, r24
 102:	08 95       	ret

00000104 <main>:
 104:	0e 94 48 00 	call	0x90	; 0x90 <init_comp>
 108:	0e 94 71 00 	call	0xe2	; 0xe2 <uart_init>
 10c:	80 91 00 01 	lds	r24, 0x0100
 110:	88 23       	and	r24, r24
 112:	39 f0       	breq	.+14     	; 0x122 <main+0x1e>
 114:	81 e6       	ldi	r24, 0x61	; 97
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	0e 94 6a 00 	call	0xd4	; 0xd4 <uart_putchar>
 11c:	10 92 00 01 	sts	0x0100, r1
 120:	f5 cf       	rjmp	.-22     	; 0x10c <main+0x8>
 122:	82 e6       	ldi	r24, 0x62	; 98
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 6a 00 	call	0xd4	; 0xd4 <uart_putchar>
 12a:	f0 cf       	rjmp	.-32     	; 0x10c <main+0x8>

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>
