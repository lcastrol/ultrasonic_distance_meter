
smart_sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0000020c  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000020c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800200  00800200  000002a0  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
   8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
   c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  10:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  14:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  18:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  1c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  20:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  24:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  28:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  2c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  30:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  34:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  38:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  3c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  40:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  44:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  48:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  4c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  50:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__vector_20>
  54:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  58:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  5c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  60:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  64:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  68:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  6c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  70:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  74:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  78:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  7c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  80:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  84:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  88:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  8c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  90:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  94:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  98:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  9c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  a0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  a4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  a8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  ac:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  b0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  b4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  b8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  bc:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  c0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  c4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  c8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  cc:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  d0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  d4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  d8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  dc:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  e0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>

000000e4 <__trampolines_start>:
  e4:	0c 94 90 00 	jmp	0x120	; 0x120 <idle_function>
  e8:	0c 94 91 00 	jmp	0x122	; 0x122 <listen_function>
  ec:	0c 94 92 00 	jmp	0x124	; 0x124 <calculate_function>
  f0:	0c 94 93 00 	jmp	0x126	; 0x126 <send_function>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	d1 e2       	ldi	r29, 0x21	; 33
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	cd bf       	out	0x3d, r28	; 61
 100:	00 e0       	ldi	r16, 0x00	; 0
 102:	0c bf       	out	0x3c, r16	; 60

00000104 <__do_clear_bss>:
 104:	22 e0       	ldi	r18, 0x02	; 2
 106:	a0 e0       	ldi	r26, 0x00	; 0
 108:	b2 e0       	ldi	r27, 0x02	; 2
 10a:	01 c0       	rjmp	.+2      	; 0x10e <.do_clear_bss_start>

0000010c <.do_clear_bss_loop>:
 10c:	1d 92       	st	X+, r1

0000010e <.do_clear_bss_start>:
 10e:	ac 30       	cpi	r26, 0x0C	; 12
 110:	b2 07       	cpc	r27, r18
 112:	e1 f7       	brne	.-8      	; 0x10c <.do_clear_bss_loop>
 114:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <main>
 118:	0c 94 04 01 	jmp	0x208	; 0x208 <_exit>

0000011c <__bad_interrupt>:
 11c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000120 <idle_function>:
 120:	08 95       	ret

00000122 <listen_function>:
 122:	08 95       	ret

00000124 <calculate_function>:
 124:	08 95       	ret

00000126 <send_function>:
 126:	85 b5       	in	r24, 0x25	; 37
 128:	82 60       	ori	r24, 0x02	; 2
 12a:	85 bd       	out	0x25, r24	; 37
 12c:	10 92 0b 02 	sts	0x020B, r1
 130:	08 95       	ret

00000132 <ioinit>:
 132:	10 92 00 02 	sts	0x0200, r1
 136:	10 92 09 02 	sts	0x0209, r1
 13a:	e1 e0       	ldi	r30, 0x01	; 1
 13c:	f2 e0       	ldi	r31, 0x02	; 2
 13e:	80 e9       	ldi	r24, 0x90	; 144
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	91 83       	std	Z+1, r25	; 0x01
 144:	80 83       	st	Z, r24
 146:	83 e9       	ldi	r24, 0x93	; 147
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	93 83       	std	Z+3, r25	; 0x03
 14c:	82 83       	std	Z+2, r24	; 0x02
 14e:	81 e9       	ldi	r24, 0x91	; 145
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	95 83       	std	Z+5, r25	; 0x05
 154:	84 83       	std	Z+4, r24	; 0x04
 156:	82 e9       	ldi	r24, 0x92	; 146
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	97 83       	std	Z+7, r25	; 0x07
 15c:	86 83       	std	Z+6, r24	; 0x06
 15e:	84 b5       	in	r24, 0x24	; 36
 160:	82 65       	ori	r24, 0x52	; 82
 162:	84 bd       	out	0x24, r24	; 36
 164:	85 b5       	in	r24, 0x25	; 37
 166:	88 60       	ori	r24, 0x08	; 8
 168:	85 bd       	out	0x25, r24	; 37
 16a:	88 e1       	ldi	r24, 0x18	; 24
 16c:	87 bd       	out	0x27, r24	; 39
 16e:	88 bd       	out	0x28, r24	; 40
 170:	9d 9a       	sbi	0x13, 5	; 19
 172:	27 9a       	sbi	0x04, 7	; 4
 174:	08 95       	ret

00000176 <get_next_state>:
 176:	80 91 00 02 	lds	r24, 0x0200
 17a:	81 30       	cpi	r24, 0x01	; 1
 17c:	31 f0       	breq	.+12     	; 0x18a <get_next_state+0x14>
 17e:	b0 f0       	brcs	.+44     	; 0x1ac <get_next_state+0x36>
 180:	82 30       	cpi	r24, 0x02	; 2
 182:	41 f0       	breq	.+16     	; 0x194 <get_next_state+0x1e>
 184:	83 30       	cpi	r24, 0x03	; 3
 186:	69 f0       	breq	.+26     	; 0x1a2 <get_next_state+0x2c>
 188:	08 95       	ret
 18a:	80 91 0b 02 	lds	r24, 0x020B
 18e:	88 23       	and	r24, r24
 190:	79 f0       	breq	.+30     	; 0x1b0 <get_next_state+0x3a>
 192:	0c c0       	rjmp	.+24     	; 0x1ac <get_next_state+0x36>
 194:	80 91 0a 02 	lds	r24, 0x020A
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	61 f0       	breq	.+24     	; 0x1b4 <get_next_state+0x3e>
 19c:	88 23       	and	r24, r24
 19e:	61 f0       	breq	.+24     	; 0x1b8 <get_next_state+0x42>
 1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <get_next_state+0x3a>
 1a2:	80 91 09 02 	lds	r24, 0x0209
 1a6:	88 23       	and	r24, r24
 1a8:	39 f0       	breq	.+14     	; 0x1b8 <get_next_state+0x42>
 1aa:	04 c0       	rjmp	.+8      	; 0x1b4 <get_next_state+0x3e>
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	08 95       	ret
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	08 95       	ret
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	08 95       	ret
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	08 95       	ret

000001bc <execute_state>:
 1bc:	e0 91 00 02 	lds	r30, 0x0200
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	ee 0f       	add	r30, r30
 1c4:	ff 1f       	adc	r31, r31
 1c6:	ef 5f       	subi	r30, 0xFF	; 255
 1c8:	fd 4f       	sbci	r31, 0xFD	; 253
 1ca:	01 90       	ld	r0, Z+
 1cc:	f0 81       	ld	r31, Z
 1ce:	e0 2d       	mov	r30, r0
 1d0:	19 94       	eijmp

000001d2 <main>:
 1d2:	0e 94 99 00 	call	0x132	; 0x132 <ioinit>
 1d6:	0e 94 bb 00 	call	0x176	; 0x176 <get_next_state>
 1da:	80 93 00 02 	sts	0x0200, r24
 1de:	0e 94 de 00 	call	0x1bc	; 0x1bc <execute_state>
 1e2:	f9 cf       	rjmp	.-14     	; 0x1d6 <main+0x4>

000001e4 <__vector_20>:
 1e4:	1f 92       	push	r1
 1e6:	0f 92       	push	r0
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	0f 92       	push	r0
 1ec:	11 24       	eor	r1, r1
 1ee:	8f 93       	push	r24
 1f0:	85 b5       	in	r24, 0x25	; 37
 1f2:	88 7f       	andi	r24, 0xF8	; 248
 1f4:	85 bd       	out	0x25, r24	; 37
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	80 93 0b 02 	sts	0x020B, r24
 1fc:	8f 91       	pop	r24
 1fe:	0f 90       	pop	r0
 200:	0f be       	out	0x3f, r0	; 63
 202:	0f 90       	pop	r0
 204:	1f 90       	pop	r1
 206:	18 95       	reti

00000208 <_exit>:
 208:	f8 94       	cli

0000020a <__stop_program>:
 20a:	ff cf       	rjmp	.-2      	; 0x20a <__stop_program>
