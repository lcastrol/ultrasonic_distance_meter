
smart_sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000001fa  0000028e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800200  00800200  0000028e  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  0000028e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a0  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
   8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
   c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  10:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  14:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  18:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  1c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  20:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  24:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  28:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  2c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  30:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  34:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  38:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  3c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  40:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  44:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  48:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  4c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_20>
  54:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  58:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  5c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  60:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  64:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  68:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  6c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  70:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  74:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  78:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  7c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  80:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  84:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  88:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  8c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  90:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  94:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  98:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  9c:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  a0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  a4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  a8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  ac:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  b0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  b4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  b8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  bc:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  c0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  c4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  c8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  cc:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  d0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  d4:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  d8:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  dc:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>
  e0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__bad_interrupt>

000000e4 <__trampolines_start>:
  e4:	0c 94 90 00 	jmp	0x120	; 0x120 <send_function>
  e8:	0c 94 96 00 	jmp	0x12c	; 0x12c <idle_function>
  ec:	0c 94 97 00 	jmp	0x12e	; 0x12e <listen_function>
  f0:	0c 94 98 00 	jmp	0x130	; 0x130 <calculate_function>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	d1 e2       	ldi	r29, 0x21	; 33
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	cd bf       	out	0x3d, r28	; 61
 100:	00 e0       	ldi	r16, 0x00	; 0
 102:	0c bf       	out	0x3c, r16	; 60

00000104 <__do_clear_bss>:
 104:	22 e0       	ldi	r18, 0x02	; 2
 106:	a0 e0       	ldi	r26, 0x00	; 0
 108:	b2 e0       	ldi	r27, 0x02	; 2
 10a:	01 c0       	rjmp	.+2      	; 0x10e <.do_clear_bss_start>

0000010c <.do_clear_bss_loop>:
 10c:	1d 92       	st	X+, r1

0000010e <.do_clear_bss_start>:
 10e:	ab 30       	cpi	r26, 0x0B	; 11
 110:	b2 07       	cpc	r27, r18
 112:	e1 f7       	brne	.-8      	; 0x10c <.do_clear_bss_loop>
 114:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <main>
 118:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <_exit>

0000011c <__bad_interrupt>:
 11c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000120 <send_function>:
 120:	85 b5       	in	r24, 0x25	; 37
 122:	82 60       	ori	r24, 0x02	; 2
 124:	85 bd       	out	0x25, r24	; 37
 126:	10 92 0a 02 	sts	0x020A, r1
 12a:	08 95       	ret

0000012c <idle_function>:
 12c:	08 95       	ret

0000012e <listen_function>:
 12e:	08 95       	ret

00000130 <calculate_function>:
 130:	08 95       	ret

00000132 <ioinit>:
 132:	10 92 00 02 	sts	0x0200, r1
 136:	e1 e0       	ldi	r30, 0x01	; 1
 138:	f2 e0       	ldi	r31, 0x02	; 2
 13a:	86 e9       	ldi	r24, 0x96	; 150
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	91 83       	std	Z+1, r25	; 0x01
 140:	80 83       	st	Z, r24
 142:	80 e9       	ldi	r24, 0x90	; 144
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	93 83       	std	Z+3, r25	; 0x03
 148:	82 83       	std	Z+2, r24	; 0x02
 14a:	87 e9       	ldi	r24, 0x97	; 151
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	95 83       	std	Z+5, r25	; 0x05
 150:	84 83       	std	Z+4, r24	; 0x04
 152:	88 e9       	ldi	r24, 0x98	; 152
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	97 83       	std	Z+7, r25	; 0x07
 158:	86 83       	std	Z+6, r24	; 0x06
 15a:	84 b5       	in	r24, 0x24	; 36
 15c:	82 65       	ori	r24, 0x52	; 82
 15e:	84 bd       	out	0x24, r24	; 36
 160:	85 b5       	in	r24, 0x25	; 37
 162:	88 60       	ori	r24, 0x08	; 8
 164:	85 bd       	out	0x25, r24	; 37
 166:	88 e1       	ldi	r24, 0x18	; 24
 168:	87 bd       	out	0x27, r24	; 39
 16a:	88 bd       	out	0x28, r24	; 40
 16c:	9d 9a       	sbi	0x13, 5	; 19
 16e:	27 9a       	sbi	0x04, 7	; 4
 170:	08 95       	ret

00000172 <get_next_state>:
 172:	80 91 00 02 	lds	r24, 0x0200
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	21 f0       	breq	.+8      	; 0x182 <get_next_state+0x10>
 17a:	78 f0       	brcs	.+30     	; 0x19a <get_next_state+0x28>
 17c:	82 30       	cpi	r24, 0x02	; 2
 17e:	31 f0       	breq	.+12     	; 0x18c <get_next_state+0x1a>
 180:	08 95       	ret
 182:	80 91 0a 02 	lds	r24, 0x020A
 186:	88 23       	and	r24, r24
 188:	51 f0       	breq	.+20     	; 0x19e <get_next_state+0x2c>
 18a:	07 c0       	rjmp	.+14     	; 0x19a <get_next_state+0x28>
 18c:	80 91 09 02 	lds	r24, 0x0209
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	39 f0       	breq	.+14     	; 0x1a2 <get_next_state+0x30>
 194:	88 23       	and	r24, r24
 196:	39 f0       	breq	.+14     	; 0x1a6 <get_next_state+0x34>
 198:	02 c0       	rjmp	.+4      	; 0x19e <get_next_state+0x2c>
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	08 95       	ret
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	08 95       	ret
 1a2:	83 e0       	ldi	r24, 0x03	; 3
 1a4:	08 95       	ret
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	08 95       	ret

000001aa <execute_state>:
 1aa:	e0 91 00 02 	lds	r30, 0x0200
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	ee 0f       	add	r30, r30
 1b2:	ff 1f       	adc	r31, r31
 1b4:	ef 5f       	subi	r30, 0xFF	; 255
 1b6:	fd 4f       	sbci	r31, 0xFD	; 253
 1b8:	01 90       	ld	r0, Z+
 1ba:	f0 81       	ld	r31, Z
 1bc:	e0 2d       	mov	r30, r0
 1be:	19 94       	eijmp

000001c0 <main>:
 1c0:	0e 94 99 00 	call	0x132	; 0x132 <ioinit>
 1c4:	0e 94 b9 00 	call	0x172	; 0x172 <get_next_state>
 1c8:	80 93 00 02 	sts	0x0200, r24
 1cc:	0e 94 d5 00 	call	0x1aa	; 0x1aa <execute_state>
 1d0:	f9 cf       	rjmp	.-14     	; 0x1c4 <main+0x4>

000001d2 <__vector_20>:
 1d2:	1f 92       	push	r1
 1d4:	0f 92       	push	r0
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	0f 92       	push	r0
 1da:	11 24       	eor	r1, r1
 1dc:	8f 93       	push	r24
 1de:	85 b5       	in	r24, 0x25	; 37
 1e0:	88 7f       	andi	r24, 0xF8	; 248
 1e2:	85 bd       	out	0x25, r24	; 37
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	80 93 0a 02 	sts	0x020A, r24
 1ea:	8f 91       	pop	r24
 1ec:	0f 90       	pop	r0
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	0f 90       	pop	r0
 1f2:	1f 90       	pop	r1
 1f4:	18 95       	reti

000001f6 <_exit>:
 1f6:	f8 94       	cli

000001f8 <__stop_program>:
 1f8:	ff cf       	rjmp	.-2      	; 0x1f8 <__stop_program>
