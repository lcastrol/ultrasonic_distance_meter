
smart_sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000328  000003bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000328  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800102  00800102  000003be  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000003be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003d0  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 03 01 	jmp	0x206	; 0x206 <__vector_23>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e2       	ldi	r30, 0x28	; 40
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 31       	cpi	r26, 0x14	; 20
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <main>
  9e:	0c 94 92 01 	jmp	0x324	; 0x324 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <idle_function>:
  a6:	ef e6       	ldi	r30, 0x6F	; 111
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8d 7f       	andi	r24, 0xFD	; 253
  ae:	80 83       	st	Z, r24
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	80 93 0d 01 	sts	0x010D, r24
  b6:	10 92 04 01 	sts	0x0104, r1
  ba:	10 92 10 01 	sts	0x0110, r1
  be:	08 95       	ret

000000c0 <uart_init>:
  c0:	10 92 c5 00 	sts	0x00C5, r1
  c4:	87 e6       	ldi	r24, 0x67	; 103
  c6:	80 93 c4 00 	sts	0x00C4, r24
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	8d 7f       	andi	r24, 0xFD	; 253
  d2:	80 83       	st	Z, r24
  d4:	86 e0       	ldi	r24, 0x06	; 6
  d6:	80 93 c2 00 	sts	0x00C2, r24
  da:	88 e0       	ldi	r24, 0x08	; 8
  dc:	80 93 c1 00 	sts	0x00C1, r24
  e0:	08 95       	ret

000000e2 <ioinit>:
  e2:	10 92 03 01 	sts	0x0103, r1
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	80 93 0d 01 	sts	0x010D, r24
  ec:	10 92 04 01 	sts	0x0104, r1
  f0:	10 92 02 01 	sts	0x0102, r1
  f4:	10 92 0f 01 	sts	0x010F, r1
  f8:	e5 e0       	ldi	r30, 0x05	; 5
  fa:	f1 e0       	ldi	r31, 0x01	; 1
  fc:	83 e5       	ldi	r24, 0x53	; 83
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	91 83       	std	Z+1, r25	; 0x01
 102:	80 83       	st	Z, r24
 104:	89 e6       	ldi	r24, 0x69	; 105
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	93 83       	std	Z+3, r25	; 0x03
 10a:	82 83       	std	Z+2, r24	; 0x02
 10c:	89 e3       	ldi	r24, 0x39	; 57
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	95 83       	std	Z+5, r25	; 0x05
 112:	84 83       	std	Z+4, r24	; 0x04
 114:	85 e5       	ldi	r24, 0x55	; 85
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	97 83       	std	Z+7, r25	; 0x07
 11a:	86 83       	std	Z+6, r24	; 0x06
 11c:	84 b5       	in	r24, 0x24	; 36
 11e:	82 65       	ori	r24, 0x52	; 82
 120:	84 bd       	out	0x24, r24	; 36
 122:	85 e1       	ldi	r24, 0x15	; 21
 124:	87 bd       	out	0x27, r24	; 39
 126:	88 bd       	out	0x28, r24	; 40
 128:	55 9a       	sbi	0x0a, 5	; 10
 12a:	27 98       	cbi	0x04, 7	; 4
 12c:	20 9a       	sbi	0x04, 0	; 4
 12e:	28 98       	cbi	0x05, 0	; 5
 130:	80 e8       	ldi	r24, 0x80	; 128
 132:	9a e1       	ldi	r25, 0x1A	; 26
 134:	90 93 89 00 	sts	0x0089, r25
 138:	80 93 88 00 	sts	0x0088, r24
 13c:	e1 e8       	ldi	r30, 0x81	; 129
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	88 60       	ori	r24, 0x08	; 8
 144:	80 83       	st	Z, r24
 146:	8b e0       	ldi	r24, 0x0B	; 11
 148:	80 bf       	out	0x30, r24	; 48
 14a:	82 e0       	ldi	r24, 0x02	; 2
 14c:	80 93 6f 00 	sts	0x006F, r24
 150:	78 94       	sei
 152:	21 9a       	sbi	0x04, 1	; 4
 154:	08 95       	ret

00000156 <get_next_state>:
 156:	80 91 03 01 	lds	r24, 0x0103
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	31 f0       	breq	.+12     	; 0x16a <get_next_state+0x14>
 15e:	b0 f0       	brcs	.+44     	; 0x18c <get_next_state+0x36>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	41 f0       	breq	.+16     	; 0x174 <get_next_state+0x1e>
 164:	83 30       	cpi	r24, 0x03	; 3
 166:	69 f0       	breq	.+26     	; 0x182 <get_next_state+0x2c>
 168:	08 95       	ret
 16a:	80 91 04 01 	lds	r24, 0x0104
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	69 f4       	brne	.+26     	; 0x18c <get_next_state+0x36>
 172:	0e c0       	rjmp	.+28     	; 0x190 <get_next_state+0x3a>
 174:	80 91 0e 01 	lds	r24, 0x010E
 178:	82 30       	cpi	r24, 0x02	; 2
 17a:	61 f0       	breq	.+24     	; 0x194 <get_next_state+0x3e>
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	41 f4       	brne	.+16     	; 0x190 <get_next_state+0x3a>
 180:	0b c0       	rjmp	.+22     	; 0x198 <get_next_state+0x42>
 182:	80 91 0d 01 	lds	r24, 0x010D
 186:	88 23       	and	r24, r24
 188:	39 f0       	breq	.+14     	; 0x198 <get_next_state+0x42>
 18a:	04 c0       	rjmp	.+8      	; 0x194 <get_next_state+0x3e>
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	08 95       	ret
 190:	82 e0       	ldi	r24, 0x02	; 2
 192:	08 95       	ret
 194:	83 e0       	ldi	r24, 0x03	; 3
 196:	08 95       	ret
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	08 95       	ret

0000019c <execute_state>:
 19c:	e0 91 03 01 	lds	r30, 0x0103
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	ee 0f       	add	r30, r30
 1a4:	ff 1f       	adc	r31, r31
 1a6:	eb 5f       	subi	r30, 0xFB	; 251
 1a8:	fe 4f       	sbci	r31, 0xFE	; 254
 1aa:	01 90       	ld	r0, Z+
 1ac:	f0 81       	ld	r31, Z
 1ae:	e0 2d       	mov	r30, r0
 1b0:	09 94       	ijmp

000001b2 <main>:
 1b2:	0e 94 71 00 	call	0xe2	; 0xe2 <ioinit>
 1b6:	0e 94 60 00 	call	0xc0	; 0xc0 <uart_init>
 1ba:	0e 94 ab 00 	call	0x156	; 0x156 <get_next_state>
 1be:	80 93 03 01 	sts	0x0103, r24
 1c2:	0e 94 ce 00 	call	0x19c	; 0x19c <execute_state>
 1c6:	f9 cf       	rjmp	.-14     	; 0x1ba <main+0x8>

000001c8 <__vector_11>:
 1c8:	1f 92       	push	r1
 1ca:	0f 92       	push	r0
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	0f 92       	push	r0
 1d0:	11 24       	eor	r1, r1
 1d2:	8f 93       	push	r24
 1d4:	ef 93       	push	r30
 1d6:	ff 93       	push	r31
 1d8:	ef e6       	ldi	r30, 0x6F	; 111
 1da:	f0 e0       	ldi	r31, 0x00	; 0
 1dc:	80 81       	ld	r24, Z
 1de:	8d 7f       	andi	r24, 0xFD	; 253
 1e0:	80 83       	st	Z, r24
 1e2:	e1 e8       	ldi	r30, 0x81	; 129
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	88 7f       	andi	r24, 0xF8	; 248
 1ea:	80 83       	st	Z, r24
 1ec:	10 92 0f 01 	sts	0x010F, r1
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	80 93 10 01 	sts	0x0110, r24
 1f6:	ff 91       	pop	r31
 1f8:	ef 91       	pop	r30
 1fa:	8f 91       	pop	r24
 1fc:	0f 90       	pop	r0
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	0f 90       	pop	r0
 202:	1f 90       	pop	r1
 204:	18 95       	reti

00000206 <__vector_23>:
 206:	1f 92       	push	r1
 208:	0f 92       	push	r0
 20a:	0f b6       	in	r0, 0x3f	; 63
 20c:	0f 92       	push	r0
 20e:	11 24       	eor	r1, r1
 210:	2f 93       	push	r18
 212:	8f 93       	push	r24
 214:	9f 93       	push	r25
 216:	80 91 84 00 	lds	r24, 0x0084
 21a:	90 91 85 00 	lds	r25, 0x0085
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	95 40       	sbci	r25, 0x05	; 5
 222:	48 f0       	brcs	.+18     	; 0x236 <__vector_23+0x30>
 224:	80 91 0f 01 	lds	r24, 0x010F
 228:	8f 5f       	subi	r24, 0xFF	; 255
 22a:	80 93 0f 01 	sts	0x010F, r24
 22e:	95 b1       	in	r25, 0x05	; 5
 230:	82 e0       	ldi	r24, 0x02	; 2
 232:	89 27       	eor	r24, r25
 234:	85 b9       	out	0x05, r24	; 5
 236:	80 91 0f 01 	lds	r24, 0x010F
 23a:	83 30       	cpi	r24, 0x03	; 3
 23c:	59 f4       	brne	.+22     	; 0x254 <__vector_23+0x4e>
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	80 93 02 01 	sts	0x0102, r24
 244:	80 91 84 00 	lds	r24, 0x0084
 248:	90 91 85 00 	lds	r25, 0x0085
 24c:	90 93 13 01 	sts	0x0113, r25
 250:	80 93 12 01 	sts	0x0112, r24
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	2f 91       	pop	r18
 25a:	0f 90       	pop	r0
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	0f 90       	pop	r0
 260:	1f 90       	pop	r1
 262:	18 95       	reti

00000264 <uart_putchar>:
 264:	90 91 c0 00 	lds	r25, 0x00C0
 268:	95 ff       	sbrs	r25, 5
 26a:	fc cf       	rjmp	.-8      	; 0x264 <uart_putchar>
 26c:	80 93 c6 00 	sts	0x00C6, r24
 270:	08 95       	ret

00000272 <listen_function>:
 272:	80 b7       	in	r24, 0x30	; 48
 274:	88 60       	ori	r24, 0x08	; 8
 276:	80 bf       	out	0x30, r24	; 48
 278:	80 91 10 01 	lds	r24, 0x0110
 27c:	81 30       	cpi	r24, 0x01	; 1
 27e:	41 f4       	brne	.+16     	; 0x290 <listen_function+0x1e>
 280:	80 93 0e 01 	sts	0x010E, r24
 284:	8f ef       	ldi	r24, 0xFF	; 255
 286:	0e 94 32 01 	call	0x264	; 0x264 <uart_putchar>
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	0c 94 32 01 	jmp	0x264	; 0x264 <uart_putchar>
 290:	80 91 02 01 	lds	r24, 0x0102
 294:	81 30       	cpi	r24, 0x01	; 1
 296:	41 f4       	brne	.+16     	; 0x2a8 <listen_function+0x36>
 298:	80 b7       	in	r24, 0x30	; 48
 29a:	87 7f       	andi	r24, 0xF7	; 247
 29c:	80 bf       	out	0x30, r24	; 48
 29e:	10 92 02 01 	sts	0x0102, r1
 2a2:	82 e0       	ldi	r24, 0x02	; 2
 2a4:	80 93 0e 01 	sts	0x010E, r24
 2a8:	08 95       	ret

000002aa <calculate_function>:
 2aa:	80 91 10 01 	lds	r24, 0x0110
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	79 f4       	brne	.+30     	; 0x2d0 <calculate_function+0x26>
 2b2:	80 91 12 01 	lds	r24, 0x0112
 2b6:	90 91 13 01 	lds	r25, 0x0113
 2ba:	0e 94 32 01 	call	0x264	; 0x264 <uart_putchar>
 2be:	80 91 12 01 	lds	r24, 0x0112
 2c2:	90 91 13 01 	lds	r25, 0x0113
 2c6:	89 2f       	mov	r24, r25
 2c8:	0e 94 32 01 	call	0x264	; 0x264 <uart_putchar>
 2cc:	10 92 0d 01 	sts	0x010D, r1
 2d0:	08 95       	ret

000002d2 <send_function>:
 2d2:	10 92 11 01 	sts	0x0111, r1
 2d6:	10 92 0e 01 	sts	0x010E, r1
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	80 93 04 01 	sts	0x0104, r24
 2e0:	83 e5       	ldi	r24, 0x53	; 83
 2e2:	0e 94 32 01 	call	0x264	; 0x264 <uart_putchar>
 2e6:	80 91 6f 00 	lds	r24, 0x006F
 2ea:	82 60       	ori	r24, 0x02	; 2
 2ec:	80 93 6f 00 	sts	0x006F, r24
 2f0:	16 bc       	out	0x26, r1	; 38
 2f2:	10 92 85 00 	sts	0x0085, r1
 2f6:	10 92 84 00 	sts	0x0084, r1
 2fa:	55 9a       	sbi	0x0a, 5	; 10
 2fc:	28 9a       	sbi	0x05, 0	; 5
 2fe:	85 b5       	in	r24, 0x25	; 37
 300:	82 60       	ori	r24, 0x02	; 2
 302:	85 bd       	out	0x25, r24	; 37
 304:	80 91 81 00 	lds	r24, 0x0081
 308:	83 60       	ori	r24, 0x03	; 3
 30a:	80 93 81 00 	sts	0x0081, r24
 30e:	28 98       	cbi	0x05, 0	; 5
 310:	80 91 84 00 	lds	r24, 0x0084
 314:	8d 32       	cpi	r24, 0x2D	; 45
 316:	e0 f3       	brcs	.-8      	; 0x310 <send_function+0x3e>
 318:	85 b5       	in	r24, 0x25	; 37
 31a:	88 7f       	andi	r24, 0xF8	; 248
 31c:	85 bd       	out	0x25, r24	; 37
 31e:	55 98       	cbi	0x0a, 5	; 10
 320:	29 98       	cbi	0x05, 1	; 5
 322:	08 95       	ret

00000324 <_exit>:
 324:	f8 94       	cli

00000326 <__stop_program>:
 326:	ff cf       	rjmp	.-2      	; 0x326 <__stop_program>
